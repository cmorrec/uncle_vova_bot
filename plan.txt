How to deploy a bot

- создать mongodb базу
- настроить lambda и api-gateway
  - встраиваем lambda в приложение, надо убедиться что бд будет поднята и контроллеры зарегистрированы до того как приложение запустится
    - Также на этом шаге можно настроить чтобы lambda могла запускать события из eventBridge нужные
  - создаем lambda функцию, ставим ей таймаут секунд 15
  - создаем api-gateway
  - добавляем domain в .env
  - настраиваем proxy из API Gateway в lambda на wakeup и webhook
  - (optional) настраиваем CI
  - настраиваем доступ к openai, mongodb (внешний интернет) (просто проверяем что lambda не в VPC)
  - регистрируем telegram webhook через curl
    - РЕГИСТРАЦИЯ (можно и без SECRET_TOKEN) curl -X POST "https://api.telegram.org/bot<BOT_TOKEN>/setWebhook" -H "Content-Type: application/json" -d '{ "url": "<URL>", "secret_token": "<SECRET_TOKEN>" }'
    - ПРОВЕРКА curl "https://api.telegram.org/bot<BOT_TOKEN>/getWebhookInfo"
  - крон который дергает ручку api/wakeup настраиваем через eventBridge

Запрос в chatGPT базовый
У меня есть телеграм бот, который настроен на webhook и написан на express.js
Мне нужно задеплоить его в aws lambda + api gateway
Я никогда не работал в aws, поэтому сначала создай мне план по шагам что нужно сделать а потом я буду с этими шагами разбираться конкретнее самостоятельно.
Мой примерное видение такое:
- получить публичный domain (или может api-gateway уже имеет такой, я не знаю)
- создаем api-gateway
- привязываем api-gateway к lambda на проксирование двух эндпоинтов (api/webhook, api/wakeup)
- как-то (в идеале через ci github actions) загружаем туда наш проект
- настраиваем доступ в публичный интернет из lambda, потому что он нужен моему боту
- создаем через один из сервисов aws cron джобу которая раз в день в определенной время дергает эндпоинт api/wakeup моего api-gateway

express (node_modules = 72 MB)
rss 79.79 MB
heapTotal 35.1 MB
heapUsed 32.95 MB
external 19.72 MB
arrayBuffers 17.43 MB

Nest.JS (node_modules = 475 MB)
rss 150.16 MB
heapTotal 71.02 MB
heapUsed 68.81 MB
external 19.68 MB
arrayBuffers 17.42 MB
